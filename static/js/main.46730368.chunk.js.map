{"version":3,"sources":["components/NavBar.js","components/dash/clusterSelection/InputUrl.js","components/dash/clusterSelection/SearchCluster.js","components/dash/clusterSelection/ClusterButton.js","components/dash/clusterSelection/ClusterList.js","components/dash/clusterSelection/sitestable/SiteRow.js","components/dash/clusterSelection/sitestable/SitesTable.js","components/websites/KeyWord.js","components/websites/KeyWordsCard.js","components/dash/clusterSelection/clusterinfo/LineChart.js","components/dash/clusterSelection/clusterinfo/BarInfo.js","components/dash/clusterSelection/clusterinfo/InfoCard.js","components/dash/clusterSelection/clusterinfo/DaySelector.js","components/dash/clusterSelection/clusterinfo/index.js","components/dash/clusterSelection/ClusterSelection.js","components/dash/index.js","components/websites/InputUrl.js","components/websites/SimSitesCard.js","components/websites/index.js","App.js","serviceWorker.js","index.js"],"names":["style","width","className","src","alt","to","handleChange","handleClick","onChange","type","placeholder","aria-label","onClick","SearchCluster","selectedClassName","normalClassName","this","props","handleSubmit","handleSearchMode","searchMode","display","gridTemplateColumns","alignItems","justifyItems","marginBottom","class","InputUrl","React","Component","ClusterView","cluster_id","selectedClusterId","selectClusterId","cssClass","ClusterList","clusterIds","map","e","i","ClusterButton","key","siterow","site_obj","url","rank","SitesTable","fetchSites","mode","searchText","fetch","then","response","json","data","console","log","setState","sitesList","state","prevProps","obj","SiteRow","word","keywords","KeyWord","Example","arr","length","push","name","pv","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","jsfiddleUrl","BarInfo","handleDayInput","event","box","input","target","value","resetInput","day1","day1input","day2","day2input","green","purple","fill","onBlur","FlipedInfo","handleFlip","gridArea","InfoCard","primaryData","secondaryData","flip","hide","id","DaySelector","goRight","days","start","end","dir","goLeft","changeDay","dirClass","viewBox","fill-rule","d","clip-rule","slice","Cointainer","styled","div","ClusterInfo","fetchInfo","w","flipRank","flipSize","showRank","showSize","day","clusterInfo","clusterData","currentCluster","clusterRankarr","clusterSizearr","size","clusterSize","clusterSizeChange","clusterRank","Math","round","clusterRankChange","Array","apply","_","KeyWordsCard","keyword","split","filter","trim","ClusterSelection","handleChangeInput","Dash","websites","website","href","DisplayWebsiteInfo","prompt","App","fetchUrlDetails","searching","searched","SimSitesCard","NavBar","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"myuPAEe,aACb,OACE,yBAAKA,MAAO,CAAEC,MAAO,UACnB,yBAAKC,UAAU,eACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,UACVC,IAAI,iGACJC,IAAI,mBAGR,yBAAKF,UAAU,mBACb,yBAAKA,UAAU,6BACb,kBAAC,IAAD,CACEG,GAAG,QACHH,UAAU,yHAFZ,aAMA,kBAAC,IAAD,CACEG,GAAG,IACHH,UAAU,wJAFZ,QAMA,kBAAC,IAAD,CACEG,GAAG,IACHH,UAAU,wJAFZ,YAMA,kBAAC,IAAD,CACEG,GAAG,YACHH,UAAU,wJAFZ,oBClCH,cAA0C,IAA9BI,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YACvC,OACE,0BAAML,UAAU,uEACd,2BACEM,SAAUF,EACVJ,UAAU,kHACVO,KAAK,OACLC,YAAY,0BACZC,aAAW,QAEb,4BACEC,QAASL,EACTL,UAAU,kIACVO,KAAK,UAHP,YCkDSI,E,uKAzDX,IAAIC,EACF,oFACEC,EACF,uFAJK,EAUHC,KAAKC,MAJPX,EANK,EAMLA,aACAY,EAPK,EAOLA,aACAC,EARK,EAQLA,iBACAC,EATK,EASLA,WAEF,OACE,yBACEpB,MAAO,CACLqB,QAAS,OACTpB,MAAO,QACPqB,oBAAqB,cACrBC,WAAY,SACZC,aAAc,SACdC,aAAc,UAGhB,yBAAKC,MAAM,2DACT,4BACEjB,KAAK,SACLiB,MAAM,sSAFR,cAOF,kBAACC,EAAD,CAAUrB,aAAcA,EAAcC,YAAaW,IACnD,0BAAMQ,MAAM,IACV,4BACEd,QAAS,WACPO,EAAiB,UAEnBjB,UACiB,UAAfkB,EAAyBN,EAAoBC,GALjD,SAUA,4BACEH,QAAS,WACPO,EAAiB,WAEnBjB,UACiB,WAAfkB,EAA0BN,EAAoBC,GALlD,kB,GA3CkBa,IAAMC,WCiBnBC,EAlBK,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,gBAKhDC,EAAWH,IAAeC,EAH5B,4GAEA,+GAEF,OACE,0BACE9B,UAAWgC,EACXtB,QAAS,WACPqB,EAAgBF,KAGjBA,ICSQI,EArBK,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYJ,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,gBACpD,OACE,yBAAK/B,UAAU,oDACb,wBAAIA,UAAU,kDAAd,cAGA,6BACCkC,EAAWC,KAAI,SAACC,EAAGC,GAAJ,OACd,oCACE,kBAACC,EAAD,CACEC,IAAKH,EACLP,WAAYO,EACZN,kBAAmBA,EACnBC,gBAAiBA,UCoBdS,EAlCC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OACE,4BACE,wBAAIzC,UAAU,yDACZ,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BACb,yBACEA,UAAU,yBACVC,IAAI,uFACJC,IAAI,MAGR,yBAAKF,UAAU,QACb,yBAAKA,UAAU,+CACZyC,EAASC,QAKlB,wBAAI1C,UAAU,yDACZ,4BAAKyC,EAASE,OAEhB,wBAAI3C,UAAU,yDACZ,0BAAMA,UAAU,6FAAhB,QAIF,wBAAIA,UAAU,yFAAd,iBCsDS4C,E,kDA/Eb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAKR8B,WAAa,WAAO,IAAD,EAC6B,EAAK9B,MAA7Ce,EADW,EACXA,kBAAmBgB,EADR,EACQA,KAAMC,EADd,EACcA,WAC3BL,EAAM,GAERA,EADW,QAATI,EACIhB,EACF,uCAAyCA,EACzC,uCACc,UAATgB,EACHhB,EACF,sCACAiB,EACA,YACAjB,EACA,sCAAwCiB,EAEtC,uCAAyCA,EAEjDC,MAAMN,GACHO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEC,UAAWJ,QAzB/B,EAAKK,MAAQ,CACXD,UAAW,IAHI,E,gEA+BjB1C,KAAK+B,e,yCAGYa,GAEfA,EAAUZ,OAAShC,KAAKC,MAAM+B,MAC9BY,EAAU5B,oBAAsBhB,KAAKC,MAAMe,mBAE3ChB,KAAK+B,e,+BAKPQ,QAAQC,IAAIxC,KAAKC,MAAMe,kBAAmBhB,KAAK2C,MAAMD,WAD9C,IAEDA,EAAc1C,KAAK2C,MAAnBD,UACN,OACE,yBAAKxD,UAAU,qBACb,yBAAKA,UAAU,gEACb,yBAAKA,UAAU,sGACb,2BAAOA,UAAU,cACf,+BACE,4BACE,wBAAIA,UAAU,gIAAd,OAGA,wBAAIA,UAAU,gIAAd,QAGA,wBAAIA,UAAU,gIAAd,UAGA,wBAAIA,UAAU,gIAAd,YAGA,wBAAIA,UAAU,oDAGjBwD,EAAUrB,KAAI,SAACwB,EAAKtB,GAAN,OACb,kBAACuB,EAAD,CAASrB,IAAKoB,EAAIjB,IAAKD,SAAUkB,e,GAtExBjC,IAAMC,W,SCDhB,cAAqB,IAATkC,EAAQ,EAARA,KACzB,OACE,0BAAM7D,UAAU,iGACb6D,ICFQ,cAAyB,IAAbC,EAAY,EAAZA,SAEzB,OADAT,QAAQC,IAAIQ,GAEV,yBAAK9D,UAAU,+FACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sCAAf,cAEF,yBAAKA,UAAU,aACZ8D,EAAS3B,KAAI,SAAC0B,EAAMxB,GAAP,OACZ,kBAAC0B,EAAD,CAASxB,IAAKF,EAAGwB,KAAMA,U,iBCDZG,E,uKAOjB,IAJQ,IACFC,EAAQnD,KAAKC,MAAbkD,IAEFb,EAAO,GACFf,EAAI,EAAGA,EAAI4B,EAAIC,OAAQ7B,IAC9Be,EAAKe,KAAK,CAAEC,KAAM,OAAS/B,EAAI,GAAIgC,GAAIJ,EAAI5B,KAG7C,OACE,kBAAC,IAAD,CACEtC,MAAO,IACPuE,OAAQ,IACRlB,KAAMA,EACNmB,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGV,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEtE,KAAK,WACLsE,QAAQ,KACRC,OAAO,UACPC,UAAW,CAAEC,EAAG,KAElB,kBAAC,IAAD,CAAMzE,KAAK,WAAWsE,QAAQ,KAAKC,OAAO,iB,GAjCbpD,IAAMC,WAAtBqC,EACZiB,YAAc,6C,YCsFRC,E,kDA9Fb,WAAYnE,GAAQ,IAAD,8BACjB,cAAMA,IASRoE,eAAiB,SAACC,EAAOC,GAAS,IAAD,EAC3BC,EAAQF,EAAMG,OAAOC,MACrBF,EAAQ,GAAKA,EAAQ,GAAI,EAAK/B,SAAL,eAAiB8B,EAAM,QAAUC,IACzD,EAAK/B,UAAL,mBAAiB8B,EAAMC,GAAvB,cAA+BD,EAAM,QAAUC,GAA/C,KAbY,EAgBnBG,WAAa,SAACJ,GACZ,IAAIG,EAAQ,EAAK/B,MAAM4B,GACvB,EAAK9B,SAAL,eAAiB8B,EAAM,QAAUG,KAhBjC,EAAK/B,MAAQ,CACXiC,KAAM,EACNC,UAAW,EACXC,KAAM,EACNC,UAAW,GANI,E,qDAqBT,IAAD,SACoC/E,KAAK2C,MAA1CiC,EADC,EACDA,KAAME,EADL,EACKA,KAAMD,EADX,EACWA,UAAWE,EADtB,EACsBA,UAC7BxC,QAAQC,IAAI,MAAOuC,EAAWD,GAFvB,IAGD3B,EAAQnD,KAAKC,MAAbkD,IACFb,EAAO,CACT,CACEgB,KAAM,OAASsB,EACfI,MAAO7B,EAAIyB,IAEb,CACEtB,KAAM,OAASwB,EACfG,OAAQ9B,EAAI2B,KAGhB,OACE,6BACE,kBAAC,IAAD,CACE7F,MAAO,IACPuE,OAAQ,IACRlB,KAAMA,EACNmB,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGV,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKA,QAAQ,QAAQmB,KAAK,YAC1B,kBAAC,IAAD,CAAKnB,QAAQ,SAASmB,KAAK,aAE7B,yBAAKlG,MAAO,CAAEC,MAAO,SAAWC,UAAU,uBACxC,yBAAKwB,MAAM,kCACT,yBAAKA,MAAM,cACT,2BAAOA,MAAM,oFAAb,OAGA,2BACEA,MAAM,yDACNjB,KAAK,OACL6D,KAAK,MACL9D,SAAU,SAAC8B,GACT,EAAK+C,eAAe/C,EAAG,SAEzB6D,OAAQ,kBAAM,EAAKR,WAAW,SAC9BD,MAAOG,KAGX,yBAAKnE,MAAM,cACT,2BAAOA,MAAM,oFAAb,OAGA,2BACEA,MAAM,yDACNjB,KAAK,OACL6D,KAAK,MACL9D,SAAU,SAAC8B,GACT,EAAK+C,eAAe/C,EAAG,SAEzB6D,OAAQ,kBAAM,EAAKR,WAAW,SAC9BD,MAAOK,Y,GArFDnE,IAAMC,WCkDtBuE,EAAa,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,WAAY/B,EAAgB,EAAhBA,KAAMH,EAAU,EAAVA,IACtC,OACE,oCACE,yBACEjE,UAAU,iDACVF,MAAO,CACLqB,QAAS,OACTG,aAAc,SACdgD,OAAQ,SAGV,kBAAC,EAAD,CAAWL,IAAKA,KAElB,yBAAKjE,UAAU,kDACb,kBAAC,EAAD,CAASiE,IAAKA,KAEhB,yBAAKnE,MAAO,CAAEsG,SAAU,MACtB,4BACEtG,MAAO,CAAEC,MAAO,OAAQqG,SAAU,KAClC1F,QAAS,WACPyF,EAAW/B,IAEb5C,MAAM,0EALR,QAcO6E,EAhFE,SAAC,GAQX,IAPLjC,EAOI,EAPJA,KACAkC,EAMI,EANJA,YACAC,EAKI,EALJA,cACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,KACAN,EAEI,EAFJA,WACAlC,EACI,EADJA,IAIA,OAAKuC,EAmCO,kBAAC,EAAD,CAAYL,WAAYA,EAAY/B,KAAMA,EAAMH,IAAKA,IAjC7D,0BACEyC,GAAG,MACH1G,UAAU,2HACVF,MAAO,CAAEC,MAAO,QAASoB,QAASsF,EAAO,OAAS,KAElD,yBAAKzG,UAAU,qCACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,uCAAuCoE,GACrD,yBAAKpE,UAAU,kCACb,uBAAGA,UAAU,+CAEf,0BAAMA,UAAU,8BACbsG,EACD,0BACEtG,UAAWuG,GAAiB,EAjBxB,2CADE,2CAoBLA,GAAiB,EAAI,IAAM,IAC3BA,IAGL,yBAAKvG,UAAU,2CAEjB,4BACEU,QAAS,WACPyF,EAAW/B,IAEbpE,UAAU,gHAJZ,iB,kBCkDK2G,E,kDArFb,WAAY5F,GAAQ,IAAD,8BACjB,cAAMA,IAQR6F,QAAU,WAAO,IACTC,EAAS,EAAK9F,MAAd8F,KADQ,EAEO,EAAKpD,MAApBqD,EAFQ,EAERA,MAAOC,EAFC,EAEDA,IAETA,EADMF,EAAK3C,OACC,GACd,EAAKX,SAAS,CAAEuD,MAAOA,EAAQ,EAAGC,IAAKA,EAAM,EAAGC,IAAK,KAdtC,EAkBnBC,OAAS,WAAO,IAAD,EACQ,EAAKxD,MAApBqD,EADO,EACPA,MAAOC,EADA,EACAA,IACTD,EAAQ,GACV,EAAKvD,SAAS,CAAEuD,MAAOA,EAAQ,EAAGC,IAAKA,EAAM,EAAGC,KAAM,KAnBxD,EAAKvD,MAAQ,CACXqD,MAAO,EACPC,IAAK,GACLC,IAAK,MALU,E,qDAyBT,IAAD,EACmBlG,KAAKC,MAAzB8F,EADC,EACDA,KAAMK,EADL,EACKA,UADL,EAEmBpG,KAAK2C,MAAzBqD,EAFC,EAEDA,MAAOC,EAFN,EAEMA,IAAKC,EAFX,EAEWA,IACdG,EAAW,GAKf,OAJY,IAARH,IAAWG,EAAW,2CACb,IAATH,IAAYG,EAAW,yCAC3B9D,QAAQC,IAAIxC,KAAK2C,MAAOoD,GAGtB,yBAAK7G,UAAU,kEACb,yBAAKwB,MAAM,qCAAqCe,IAAK4E,GACnD,4BACEzG,QAASI,KAAKmG,OACd1G,KAAK,SACLiB,MAAM,qTACNf,aAAW,YAEX,yBAAKe,MAAM,UAAUwE,KAAK,eAAeoB,QAAQ,aAC/C,0BACEC,YAAU,UACVC,EAAE,oHACFC,YAAU,cAIfV,EAAKW,MAAMV,EAAOC,GAAK5E,KAAI,SAACC,EAAGC,GAAJ,OAC1B,4BACE3B,QAAS,WACPwG,EAAU9E,EAAI,IAEhBG,IAAKH,EAAIC,EACT9B,KAAK,SACLiB,MACE,gTACA2F,GAGD/E,EAAI,MAGT,4BACE1B,QAASI,KAAK8F,QACdrG,KAAK,SACLiB,MAAM,4TACNf,aAAW,QAEX,yBAAKe,MAAM,UAAUwE,KAAK,eAAeoB,QAAQ,aAC/C,0BACEC,YAAU,UACVC,EAAE,qHACFC,YAAU,oB,GA5EA7F,IAAMC,W,6NCKhC,IAAM8F,EAAaC,IAAOC,IAAV,KAwIDC,E,kDA3Hb,WAAY7G,GAAQ,IAAD,8BACjB,cAAMA,IAYR8G,UAAY,aAbO,EAsBnB1B,WAAa,SAAC2B,GAAO,IAAD,EAC+B,EAAKrE,MAAhDsE,EADY,EACZA,SAAUC,EADE,EACFA,SAAUC,EADR,EACQA,SAAUC,EADlB,EACkBA,SAC1B,SAANJ,EACF,EAAKvE,SAAS,CAAEwE,UAAWA,EAAUG,UAAWA,IAC7C,EAAK3E,SAAS,CAAEyE,UAAWA,EAAUC,UAAWA,KA1BpC,EA6BnBf,UAAY,SAACiB,GACX,EAAK5E,SAAS,CAAE4E,SA5BhB,EAAK1E,MAAQ,CACX2E,YAAaC,EACbC,eAAgB,KAChBL,UAAU,EACVC,UAAU,EACVH,UAAU,EACVC,UAAU,EACVG,IAAK,GATU,E,4GAiCAzE,GACbA,IAAc5C,KAAKC,OACrBD,KAAK+G,c,+BAGC,IACF/F,EAAsBhB,KAAKC,MAA3Be,kBADC,EASHhB,KAAK2C,MANP2E,EAHK,EAGLA,YACAH,EAJK,EAILA,SACAC,EALK,EAKLA,SACAF,EANK,EAMLA,SACAD,EAPK,EAOLA,SACAI,EARK,EAQLA,IAGF,GAAIrG,EAAmB,CACrB,IAAIyG,EAAiBH,EAAYtG,GAAmBa,KAChD6F,EAAiBJ,EAAYtG,GAAmB2G,KAChDC,EAAcN,EAAYtG,GAAmB2G,KAAKN,GAClDQ,EACFP,EAAYtG,GAAmB2G,KAAKN,GACpCC,EAAYtG,GAAmB2G,KAAKN,EAAM,GACxCS,EAAcC,KAAKC,MACrBV,EAAYtG,GAAmBa,KAAKwF,EAAM,GACxCC,EAAYtG,GAAmB2G,KAAKN,EAAM,IAE1CY,EACFF,KAAKC,MACHV,EAAYtG,GAAmBa,KAAKwF,GAClCC,EAAYtG,GAAmB2G,KAAKN,IACpCS,EAEN,OACE,yBAAKrG,IAAKT,GACPmG,GAAYC,GACX,kBAAC,EAAD,CACEhB,UAAWpG,KAAKoG,UAChBL,KAAMmC,MAAMC,MAAM,KAAMD,MAAM,KAAK7G,KAAI,SAAU+G,EAAG7G,GAClD,OAAOA,OAIb,kBAACoF,EAAD,KACE,kBAAC,EAAD,CACEjB,KAAMuB,EACNtB,MAAOwB,EACP7D,KAAK,OACLkC,YAAasC,EACbrC,cAAewC,EACf5C,WAAYrF,KAAKqF,WACjBlC,IAAKsE,IAEP,kBAAC,EAAD,CACE/B,KAAMwB,EACNvB,MAAOyB,EACP9D,KAAK,OACLkC,YAAaoC,EACbnC,cAAeoC,EACfxC,WAAYrF,KAAKqF,WACjBlC,IAAKuE,KAIT,yBACExI,UAAU,wCACVF,MAAO,CACLqB,QAAS,OACTG,aAAc,SACdD,WAAY,WAGb4G,GAAYC,GACX,kBAACiB,EAAD,CACErF,SAAUsE,EAAYtG,GAAmBsH,QAAQ,GAC9CC,MAAM,SACNC,QAAO,SAAUlH,GAChB,OAAOA,EAAEmH,OAAOrF,OAAS,SAQvC,OAAO,yC,GAvHaxC,IAAMC,WC6DjB6H,E,kDA1Eb,WAAYzI,GAAQ,IAAD,8BACjB,cAAMA,IAqBR0I,kBAAoB,SAACrE,GAAW,IACxBtC,EAAS,EAAKW,MAAdX,KACqB,KAAvBsC,EAAMG,OAAOC,QAAc1C,EAAO,OACtC,EAAKS,SAAS,CAAER,WAAYqC,EAAMG,OAAOC,MAAO1C,UAzB/B,EA4BnB9B,aAAe,WAAO,IACdE,EAAe,EAAKuC,MAApBvC,WACN,EAAKqC,SAAS,CAAET,KAAM5B,KA9BL,EAiCnBD,iBAAmB,SAACC,GAClB,EAAKqC,SAAS,CAAErC,gBAlCC,EAqCnBa,gBAAkB,SAAC2E,GACjB,EAAKnD,SAAS,CAAEzB,kBAAmB4E,EAAI5D,KAAM,SApC7C,EAAKW,MAAQ,CACX3B,kBAAmB,KAEnBgB,KAAM,MACN5B,WAAY,QACZ6B,WAAY,GACZb,WAAY,IARG,E,gEAejB,IADA,IAAI+B,EAAM,GACD5B,EAAI,EAAGA,GAAK,GAAIA,IACvB4B,EAAIE,KAAK9B,GAGXvB,KAAKyC,SAAS,CAAErB,WAAY+B,M,+BAsBpB,IAAD,EAOHnD,KAAK2C,MALPvB,EAFK,EAELA,WACAJ,EAHK,EAGLA,kBACAgB,EAJK,EAILA,KACAC,EALK,EAKLA,WACA7B,EANK,EAMLA,WAGF,OADAmC,QAAQC,IAAIR,EAAM5B,GAEhB,oCACE,kBAAC,EAAD,CACEgB,WAAYA,EACZH,gBAAiBjB,KAAKiB,gBACtBD,kBAAmBA,IAErB,kBAAC,EAAD,CAAaA,kBAAmBA,IAChC,kBAAC,EAAD,CACE1B,aAAcU,KAAK2I,kBACnBzI,aAAcF,KAAKE,aACnBC,iBAAkBH,KAAKG,iBACvBC,WAAYA,IAEd,kBAAC,EAAD,CACEY,kBAAmBA,EACnBgB,KAAMA,EACNC,WAAYA,S,GApESrB,IAAMC,WCOtB+H,E,uKARX,OACE,6BACE,kBAAC,EAAD,W,GAJWhI,IAAMC,WCDV,cAA0C,IAA9BvB,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YACvC,OACE,0BAAML,UAAU,uEACd,2BACEM,SAAUF,EACVJ,UAAU,kHACVO,KAAK,OACLC,YAAY,0BACZC,aAAW,QAEb,4BACEC,QAASL,EACTL,UAAU,kIACVO,KAAK,UAHP,YCVS,cAAyB,IAAboJ,EAAY,EAAZA,SACzB,OACE,yBAAK3J,UAAU,uEACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sCAAf,kBAEF,yBAAKA,UAAU,yBACZ2J,EAASxH,KAAI,SAACyH,EAASvH,GAAV,OACZ,wBAAIE,IAAKF,EAAGrC,UAAU,yCACpB,uBAAG6J,KAAMD,GAAUA,UCyD/B,SAASE,EAAT,GAAyC,IAAXC,EAAU,EAAVA,OAC5B,OACE,yBAAK/J,UAAU,sFACb,yBAAKA,UAAU,6CACb,wBAAIA,UAAU,oDACX+J,KAMIC,M,kDAzEb,WAAYjJ,GAAQ,IAAD,8BACjB,cAAMA,IAURkJ,gBAAkB,WAAO,IACjBvH,EAAQ,EAAKe,MAAbf,IACNW,QAAQC,IAAIZ,GACA,KAARA,IACJ,EAAKa,SAAS,CAAE2G,WAAW,EAAMC,UAAU,IAE3CnH,MAAM,wCAA0CN,GAC7CO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJ,EAAKG,SAAS,CACZO,SAAUV,EAAKU,UAAY,GAC3B6F,SAAUvG,EAAKuG,UAAY,GAC3BO,WAAW,SAvBA,EA6BnB7J,YAAc,WACZ,EAAK4J,mBA9BY,EAiCnB7J,aAAe,SAACgF,GACd,EAAK7B,SAAS,CAAEb,IAAK0C,EAAMG,OAAOC,SAhClC,EAAK/B,MAAQ,CACXK,SAAU,GACV6F,SAAU,GACVQ,UAAU,EACVD,WAAW,EACXxH,IAAK,IAPU,E,qDAqCT,IAAD,EACgD5B,KAAK2C,MAAtD0G,EADC,EACDA,SAAUD,EADT,EACSA,UAAWpG,EADpB,EACoBA,SAAU6F,EAD9B,EAC8BA,SAAUjH,EADxC,EACwCA,IAC3CqH,EAAS,GAOb,OANwBA,GAAN,IAAdG,EAA6B,sBACX,IAAbC,EAA6B,yBACT,IAApBrG,EAASI,QAAoC,IAApByF,EAASzF,OAChC,uCACGxB,EAGZ,6BACE,kBAAC,EAAD,CACErC,YAAaS,KAAKT,YAClBD,aAAcU,KAAKV,eAErB,kBAAC0J,EAAD,CAAoBC,OAAQA,IAC5B,yBAAKjK,MAAO,CAAEqB,QAAS,OAAQE,WAAY,WACpB,IAApByC,EAASI,QAAgB,kBAACiF,EAAD,CAAcrF,SAAUA,IAC7B,IAApB6F,EAASzF,QAAgB,kBAACkG,EAAD,CAAcT,SAAUA,U,GAxD1CjI,IAAMC,W,QC6DTqI,E,kDA1Db,WAAYjJ,GAAQ,IAAD,8BACjB,cAAMA,IAURkJ,gBAAkB,WAAO,IACjBvH,EAAQ,EAAKe,MAAbf,IACM,KAARA,IACJ,EAAKa,SAAS,CAAE2G,WAAW,EAAMC,UAAU,IAE3CnH,MAAM,yBAA2BN,GAC9BO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJ,EAAKG,SAAS,CACZO,SAAUV,EAAKU,UAAY,GAC3B6F,SAAUvG,EAAKuG,UAAY,GAC3BO,WAAW,SAtBA,EA4BnB7J,YAAc,WACZ,EAAK4J,mBA7BY,EAgCnB7J,aAAe,SAACgF,GACd,EAAK7B,SAAS,CAAEb,IAAK0C,EAAMG,OAAOC,SA/BlC,EAAK/B,MAAQ,CACXK,SAAU,GACV6F,SAAU,GACVQ,UAAU,EACVD,WAAW,EACXxH,IAAK,IAPU,E,qDAqCjB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC2H,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,c,GAlDI5I,IAAMC,WCKJ4I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlI,MAAK,SAAAmI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlI,QAAQkI,MAAMA,EAAMC,c","file":"static/js/main.46730368.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function () {\n  return (\n    <div style={{ width: \"100vw\" }}>\n      <nav className=\"bg-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <img\n                  className=\"h-8 w-8\"\n                  src=\"https://raw.githubusercontent.com/simple-icons/simple-icons/develop/icons/adobeillustrator.svg\"\n                  alt=\"Workflow logo\"\n                />\n              </div>\n              <div className=\"hidden md:block\">\n                <div className=\"ml-10 flex items-baseline\">\n                  <Link\n                    to=\"/dash\"\n                    className=\"px-3 py-2 rounded-md text-sm font-medium text-white bg-gray-900 focus:outline-none focus:text-white focus:bg-gray-700\"\n                  >\n                    Dashboard\n                  </Link>\n                  <Link\n                    to=\"/\"\n                    className=\"ml-4 px-3 py-2 rounded-md text-sm font-medium text-gray-300 hover:text-white hover:bg-gray-700 focus:outline-none focus:text-white focus:bg-gray-700\"\n                  >\n                    Home\n                  </Link>\n                  <Link\n                    to=\"/\"\n                    className=\"ml-4 px-3 py-2 rounded-md text-sm font-medium text-gray-300 hover:text-white hover:bg-gray-700 focus:outline-none focus:text-white focus:bg-gray-700\"\n                  >\n                    Overview\n                  </Link>\n                  <Link\n                    to=\"/websites\"\n                    className=\"ml-4 px-3 py-2 rounded-md text-sm font-medium text-gray-300 hover:text-white hover:bg-gray-700 focus:outline-none focus:text-white focus:bg-gray-700\"\n                  >\n                    websites\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ({ handleChange, handleClick }) {\n  return (\n    <span className=\"flex w-full  items-center border-b border-b-2 border-gray-500 py-1 \">\n      <input\n        onChange={handleChange}\n        className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n        type=\"text\"\n        placeholder=\"https://www.google.com/\"\n        aria-label=\"url\"\n      />\n      <button\n        onClick={handleClick}\n        className=\"flex-shrink-0 bg-gray-800 hover:bg-gray-900 border-gray-800 hover:border-gray-900 text-sm border-4 text-white py-1 px-2 rounded\"\n        type=\"button\"\n      >\n        Search\n      </button>\n    </span>\n  );\n}\n","import React from \"react\";\nimport InputUrl from \"./InputUrl\";\n\nclass SearchCluster extends React.Component {\n  render() {\n    let selectedClassName =\n      \"bg-gray-800 text-white hover:bg-gray-900 text-white font-bold py-2 px-4 rounded-l\";\n    let normalClassName =\n      \"bg-gray-200 text-white hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded-r\";\n    let {\n      handleChange,\n      handleSubmit,\n      handleSearchMode,\n      searchMode,\n    } = this.props;\n    return (\n      <div\n        style={{\n          display: \"grid\",\n          width: \"100vw\",\n          gridTemplateColumns: \"1fr 8fr 2fr\",\n          alignItems: \"center\",\n          justifyItems: \"center\",\n          marginBottom: \"5.3em\",\n        }}\n      >\n        <div class=\"flex justify-center px-2 w-auto hidden sm:block h-full \">\n          <button\n            type=\"button\"\n            class=\"inline-flex h-full items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 active:text-gray-800 active:bg-gray-50 transition duration-150 ease-in-out\"\n          >\n            Education\n          </button>\n        </div>\n        <InputUrl handleChange={handleChange} handleClick={handleSubmit} />\n        <span class=\"\">\n          <button\n            onClick={() => {\n              handleSearchMode(\"query\");\n            }}\n            className={\n              searchMode === \"query\" ? selectedClassName : normalClassName\n            }\n          >\n            Query\n          </button>\n          <button\n            onClick={() => {\n              handleSearchMode(\"domain\");\n            }}\n            className={\n              searchMode === \"domain\" ? selectedClassName : normalClassName\n            }\n          >\n            Org Name\n          </button>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default SearchCluster;\n","import React from \"react\";\n\nconst ClusterView = ({ cluster_id, selectedClusterId, selectClusterId }) => {\n  let selectedClass =\n    \"inline-block bg-gray-800 rounded-full px-3 py-1 text-sm font-semibold text-white mr-2 mb-2 cursor-pointer\";\n  let normalClass =\n    \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 cursor-pointer\";\n  let cssClass = cluster_id === selectedClusterId ? selectedClass : normalClass;\n  return (\n    <span\n      className={cssClass}\n      onClick={() => {\n        selectClusterId(cluster_id);\n      }}\n    >\n      {cluster_id}\n    </span>\n  );\n};\n\nexport default ClusterView;\n","import React from \"react\";\nimport ClusterButton from \"./ClusterButton\";\n\nconst ClusterList = ({ clusterIds, selectedClusterId, selectClusterId }) => {\n  return (\n    <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 my-8\">\n      <h2 className=\"text-3xl font-bold leading-tight text-gray-900\">\n        Categories\n      </h2>\n      <br />\n      {clusterIds.map((e, i) => (\n        <>\n          <ClusterButton\n            key={e}\n            cluster_id={e}\n            selectedClusterId={selectedClusterId}\n            selectClusterId={selectClusterId}\n          />\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default ClusterList;\n","import React from \"react\";\n\nconst siterow = ({ site_obj }) => {\n  return (\n    <tr>\n      <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-200\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0 h-10 w-10\">\n            <img\n              className=\"h-10 w-10 rounded-full\"\n              src=\"https://raw.githubusercontent.com/simple-icons/simple-icons/develop/icons/airbnb.svg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"ml-4\">\n            <div className=\"text-sm leading-5 font-medium text-gray-900\">\n              {site_obj.url}\n            </div>\n          </div>\n        </div>\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-200\">\n        <h3>{site_obj.rank}</h3>\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-200\">\n        <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n          +10\n        </span>\n      </td>\n      <td className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-200 text-sm leading-5 text-gray-500\">\n        website key\n      </td>\n    </tr>\n  );\n};\n\nexport default siterow;\n","import React from \"react\";\nimport SiteRow from \"./SiteRow\";\n\nclass SitesTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sitesList: [],\n    };\n  }\n  fetchSites = () => {\n    let { selectedClusterId, mode, searchText } = this.props;\n    let url = \"\";\n    if (mode === \"all\") {\n      url = selectedClusterId\n        ? \"http://127.0.0.1:5000/getclusterurl/\" + selectedClusterId\n        : \"http://127.0.0.1:5000/getclusterurl/\";\n    } else if (mode === \"query\") {\n      url = selectedClusterId\n        ? \"http://127.0.0.1:5000/search/query/\" +\n          searchText +\n          \"/cluster/\" +\n          selectedClusterId\n        : \"http://127.0.0.1:5000/search/query/\" + searchText;\n    } else {\n      url = \"http://127.0.0.1:5000/search/domain/\" + searchText;\n    }\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.setState({ sitesList: data });\n      });\n  };\n  componentDidMount() {\n    this.fetchSites();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.mode !== this.props.mode ||\n      prevProps.selectedClusterId !== this.props.selectedClusterId\n    ) {\n      this.fetchSites();\n    }\n  }\n\n  render() {\n    console.log(this.props.selectedClusterId, this.state.sitesList);\n    let { sitesList } = this.state;\n    return (\n      <div className=\"flex flex-col m-8\">\n        <div className=\"-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8\">\n          <div className=\"align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200\">\n            <table className=\"min-w-full\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                    Url\n                  </th>\n                  <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                    Rank\n                  </th>\n                  <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                    Change\n                  </th>\n                  <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider\">\n                    Keywords\n                  </th>\n                  <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50\"></th>\n                </tr>\n              </thead>\n              {sitesList.map((obj, i) => (\n                <SiteRow key={obj.url} site_obj={obj} />\n              ))}\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SitesTable;\n","import React from \"react\";\n\nexport default function ({ word }) {\n  return (\n    <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n      {word}\n    </span>\n  );\n}\n","import React from \"react\";\nimport KeyWord from \"./KeyWord\";\n\nexport default function ({ keywords }) {\n  console.log(keywords);\n  return (\n    <div className=\"animate__animated animate__fadeInDown max-w-md rounded overflow-hidden shadow-lg mx-4 my-6 \">\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-xl mb-2 text-center\">Key Words</div>\n      </div>\n      <div className=\"px-6 py-4\">\n        {keywords.map((word, i) => (\n          <KeyWord key={i} word={word} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default class Example extends React.Component {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/xqjtetw0/\";\n\n  render() {\n    let { arr } = this.props;\n\n    let data = [];\n    for (let i = 0; i < arr.length; i++) {\n      data.push({ name: \"day\" + (i + 1), pv: arr[i] });\n    }\n\n    return (\n      <LineChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Line\n          type=\"monotone\"\n          dataKey=\"pv\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n        />\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n      </LineChart>\n    );\n  }\n}\n","import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\n\nclass BarInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      day1: 1,\n      day1input: 1,\n      day2: 2,\n      day2input: 2,\n    };\n  }\n\n  handleDayInput = (event, box) => {\n    let input = event.target.value;\n    if (input < 1 || input > 30) this.setState({ [box + \"input\"]: input });\n    else this.setState({ [box]: input, [box + \"input\"]: input });\n  };\n\n  resetInput = (box) => {\n    let value = this.state[box];\n    this.setState({ [box + \"input\"]: value });\n  };\n\n  render() {\n    let { day1, day2, day1input, day2input } = this.state;\n    console.log(\"day\", day2input, day2);\n    let { arr } = this.props;\n    let data = [\n      {\n        name: \"day \" + day1,\n        green: arr[day1],\n      },\n      {\n        name: \"day \" + day2,\n        purple: arr[day2],\n      },\n    ];\n    return (\n      <div>\n        <BarChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Bar dataKey=\"green\" fill=\"#38A169\" />\n          <Bar dataKey=\"purple\" fill=\"#805AD5\" />\n        </BarChart>\n        <div style={{ width: \"500px\" }} className=\"flex justify-center\">\n          <div class=\"flex items-center align-center\">\n            <div class=\"w-16 mx-8 \">\n              <label class=\"block uppercase tracking-wide text-charcoal-darker text-xs font-bold text-center\">\n                day\n              </label>\n              <input\n                class=\"w-16 shadow-inner p-4 border-0 bg-gray-100 text-center\"\n                type=\"text\"\n                name=\"lat\"\n                onChange={(e) => {\n                  this.handleDayInput(e, \"day1\");\n                }}\n                onBlur={() => this.resetInput(\"day1\")}\n                value={day1input}\n              />\n            </div>\n            <div class=\" w-16 mx-8\">\n              <label class=\"block uppercase tracking-wide text-charcoal-darker text-xs font-bold text-center\">\n                day\n              </label>\n              <input\n                class=\"w-16 shadow-inner p-4 border-0 bg-gray-100 text-center\"\n                type=\"text\"\n                name=\"lon\"\n                onChange={(e) => {\n                  this.handleDayInput(e, \"day2\");\n                }}\n                onBlur={() => this.resetInput(\"day2\")}\n                value={day2input}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BarInfo;\n","import React from \"react\";\nimport LineChart from \"./LineChart\";\nimport BarInfo from \"./BarInfo\";\n\nconst InfoCard = ({\n  name,\n  primaryData,\n  secondaryData,\n  flip,\n  hide,\n  handleFlip,\n  arr,\n}) => {\n  let downClassName = \" bg-red-300 text-sm ml-2 rounded-lg p-1\";\n  let upClassName = \" bg-teal-300 text-sm ml-2 rounded-lg p-1\";\n  if (!flip)\n    return (\n      <span\n        id=\"app\"\n        className=\"bg-white inline-block h-60 rounded shadow-md flex card text-grey-darkest mx-4 my-8 animate__animated animate__fadeInDown\"\n        style={{ width: \"320px\", display: hide ? \"none\" : \"\" }}\n      >\n        <div className=\"w-full flex flex-col items-center\">\n          <div className=\"p-4 pb-0 flex-1\">\n            <h1 className=\" mb-1 text-center text-grey-darkest\">{name}</h1>\n            <div className=\"text-xs flex items-center mb-6\">\n              <i className=\"fas fa-map-marker-alt mr-1 text-grey-dark\" />\n            </div>\n            <span className=\"text-5xl text-grey-darkest\">\n              {primaryData}\n              <span\n                className={secondaryData >= 0 ? upClassName : downClassName}\n              >\n                {secondaryData >= 0 ? \"+\" : \"-\"}\n                {secondaryData}\n              </span>\n            </span>\n            <div className=\"flex items-center justify-center mt-4\"></div>\n          </div>\n          <button\n            onClick={() => {\n              handleFlip(name);\n            }}\n            className=\"bg-teal-500 p-3 flex w-full text-center text-white items-center justify-between transition hover:bg-teal-700\"\n          >\n            Learn More\n          </button>\n        </div>\n      </span>\n    );\n  else return <FlipedInfo handleFlip={handleFlip} name={name} arr={arr} />;\n};\n\nconst FlipedInfo = ({ handleFlip, name, arr }) => {\n  return (\n    <>\n      <div\n        className=\"animate__animated animate__flipInX w-full mx-4\"\n        style={{\n          display: \"grid\",\n          justifyItems: \"center\",\n          height: \"60vh\",\n        }}\n      >\n        <LineChart arr={arr} />\n      </div>\n      <div className=\"animate__animated animate__flipInX w-full mx-4\">\n        <BarInfo arr={arr} />\n      </div>\n      <div style={{ gridArea: \"b\" }}>\n        <button\n          style={{ width: \"40px\", gridArea: \"b\" }}\n          onClick={() => {\n            handleFlip(name);\n          }}\n          class=\"bg-teal-500  hover:bg-teal-700 text-white font- py-2 px-4 rounded-full\"\n        >\n          X\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default InfoCard;\n","import React from \"react\";\nimport \"./clusterinfo.css\";\n\nclass DaySelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: 0,\n      end: 10,\n      dir: null,\n    };\n  }\n\n  goRight = () => {\n    let { days } = this.props;\n    let { start, end } = this.state;\n    let max = days.length;\n    if (end < max + 1) {\n      this.setState({ start: start + 1, end: end + 1, dir: 1 });\n    }\n  };\n\n  goLeft = () => {\n    let { start, end } = this.state;\n    if (start > 0) {\n      this.setState({ start: start - 1, end: end - 1, dir: -1 });\n    }\n  };\n\n  render() {\n    let { days, changeDay } = this.props;\n    let { start, end, dir } = this.state;\n    let dirClass = \"\";\n    if (dir === 1) dirClass = \"animate__animated animate__fadeInRight\";\n    if (dir === -1) dirClass = \"animate__animated animate__fadeInLeft\";\n    console.log(this.state, days);\n\n    return (\n      <div className=\"flex justify-center animate__animated animate__fadeInDown mb-4\">\n        <nav class=\"relative z-0 inline-flex shadow-sm\" key={dirClass}>\n          <button\n            onClick={this.goLeft}\n            type=\"button\"\n            class=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\"\n            aria-label=\"Previous\"\n          >\n            <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n          </button>\n          {days.slice(start, end).map((e, i) => (\n            <button\n              onClick={() => {\n                changeDay(e + 1);\n              }}\n              key={e + i}\n              type=\"button\"\n              class={\n                \"-ml-px relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700 hover:text-gray-500 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150 \" +\n                dirClass\n              }\n            >\n              {e + 1}\n            </button>\n          ))}\n          <button\n            onClick={this.goRight}\n            type=\"button\"\n            class=\"-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150\"\n            aria-label=\"Next\"\n          >\n            <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n          </button>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default DaySelector;\n","import React from \"react\";\nimport KeyWordsCard from \"../../../websites/KeyWordsCard\";\nimport clusterData from \"./clusters.json\";\nimport InfoCard from \"./InfoCard\";\nimport \"./clusterinfo.css\";\nimport styled from \"styled-components\";\nimport DaySelector from \"./DaySelector\";\n\nconst Cointainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  margin-bottom: 40px;\n  grid-template-areas:\n    \". .\"\n    \"b b\";\n`;\n\n//card ,card_cointainer,border\n\nclass ClusterInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clusterInfo: clusterData,\n      currentCluster: null,\n      showRank: true,\n      showSize: true,\n      flipRank: false,\n      flipSize: false,\n      day: 1,\n    };\n  }\n\n  fetchInfo = () => {\n    //get cluster id\n    //if cluster id is 0 do nothing\n    //else fetch\n  };\n  componentDidMount() {\n    //fetch and store clusterInfo\n  }\n\n  handleFlip = (w) => {\n    let { flipRank, flipSize, showRank, showSize } = this.state;\n    if (w === \"Rank\")\n      this.setState({ flipRank: !flipRank, showSize: !showSize });\n    else this.setState({ flipSize: !flipSize, showRank: !showRank });\n  };\n\n  changeDay = (day) => {\n    this.setState({ day });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.fetchInfo();\n    }\n  }\n  render() {\n    let { selectedClusterId } = this.props;\n    let {\n      clusterInfo,\n      showRank,\n      showSize,\n      flipSize,\n      flipRank,\n      day,\n    } = this.state;\n\n    if (selectedClusterId) {\n      let clusterRankarr = clusterInfo[selectedClusterId].rank;\n      let clusterSizearr = clusterInfo[selectedClusterId].size;\n      let clusterSize = clusterInfo[selectedClusterId].size[day];\n      let clusterSizeChange =\n        clusterInfo[selectedClusterId].size[day] -\n        clusterInfo[selectedClusterId].size[day - 1];\n      let clusterRank = Math.round(\n        clusterInfo[selectedClusterId].rank[day - 1] /\n          clusterInfo[selectedClusterId].size[day - 1]\n      );\n      let clusterRankChange =\n        Math.round(\n          clusterInfo[selectedClusterId].rank[day] /\n            clusterInfo[selectedClusterId].size[day]\n        ) - clusterRank;\n\n      return (\n        <div key={selectedClusterId}>\n          {showRank && showSize && (\n            <DaySelector\n              changeDay={this.changeDay}\n              days={Array.apply(null, Array(30)).map(function (_, i) {\n                return i;\n              })}\n            />\n          )}\n          <Cointainer>\n            <InfoCard\n              flip={flipRank}\n              hide={!showRank}\n              name=\"Rank\"\n              primaryData={clusterRank}\n              secondaryData={clusterRankChange}\n              handleFlip={this.handleFlip}\n              arr={clusterRankarr}\n            />\n            <InfoCard\n              flip={flipSize}\n              hide={!showSize}\n              name=\"Size\"\n              primaryData={clusterSize}\n              secondaryData={clusterSizeChange}\n              handleFlip={this.handleFlip}\n              arr={clusterSizearr}\n            />\n          </Cointainer>\n\n          <div\n            className=\"animate__animated animate__fadeInDown\"\n            style={{\n              display: \"grid\",\n              justifyItems: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            {showRank && showSize && (\n              <KeyWordsCard\n                keywords={clusterInfo[selectedClusterId].keyword[0]\n                  .split(/(\\s+)/)\n                  .filter(function (e) {\n                    return e.trim().length > 0;\n                  })}\n              />\n            )}\n          </div>\n        </div>\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nexport default ClusterInfo;\n","import React from \"react\";\nimport SearchCluster from \"./SearchCluster\";\nimport ClusterList from \"./ClusterList\";\nimport SitesTable from \"./sitestable/SitesTable\";\nimport ClusterInfo from \"./clusterinfo/index\";\n\nclass ClusterSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedClusterId: null,\n      //all,search,domain\n      mode: \"all\",\n      searchMode: \"query\",\n      searchText: \"\",\n      clusterIds: [],\n    };\n  }\n\n  componentDidMount() {\n    //dummy cluster list\n    let arr = [];\n    for (let i = 0; i <= 99; i++) {\n      arr.push(i);\n    }\n\n    this.setState({ clusterIds: arr });\n  }\n\n  handleChangeInput = (event) => {\n    let { mode } = this.state;\n    if (event.target.value === \"\") mode = \"all\";\n    this.setState({ searchText: event.target.value, mode });\n  };\n\n  handleSubmit = () => {\n    let { searchMode } = this.state;\n    this.setState({ mode: searchMode });\n  };\n\n  handleSearchMode = (searchMode) => {\n    this.setState({ searchMode });\n  };\n\n  selectClusterId = (id) => {\n    this.setState({ selectedClusterId: id, mode: \"all\" });\n  };\n\n  render() {\n    let {\n      clusterIds,\n      selectedClusterId,\n      mode,\n      searchText,\n      searchMode,\n    } = this.state;\n    console.log(mode, searchMode);\n    return (\n      <>\n        <ClusterList\n          clusterIds={clusterIds}\n          selectClusterId={this.selectClusterId}\n          selectedClusterId={selectedClusterId}\n        />\n        <ClusterInfo selectedClusterId={selectedClusterId} />\n        <SearchCluster\n          handleChange={this.handleChangeInput}\n          handleSubmit={this.handleSubmit}\n          handleSearchMode={this.handleSearchMode}\n          searchMode={searchMode}\n        />\n        <SitesTable\n          selectedClusterId={selectedClusterId}\n          mode={mode}\n          searchText={searchText}\n        />\n      </>\n    );\n  }\n}\n\nexport default ClusterSelection;\n","import React from \"react\";\nimport ClusterSelection from \"./clusterSelection/ClusterSelection\";\n\nclass Dash extends React.Component {\n  render() {\n    return (\n      <div>\n        <ClusterSelection />\n      </div>\n    );\n  }\n}\n\nexport default Dash;\n","import React from \"react\";\n\nexport default function ({ handleChange, handleClick }) {\n  return (\n    <span className=\"flex w-full  items-center border-b border-b-2 border-gray-500 py-1 \">\n      <input\n        onChange={handleChange}\n        className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n        type=\"text\"\n        placeholder=\"https://www.google.com/\"\n        aria-label=\"url\"\n      />\n      <button\n        onClick={handleClick}\n        className=\"flex-shrink-0 bg-gray-800 hover:bg-gray-900 border-gray-800 hover:border-gray-900 text-sm border-4 text-white py-1 px-2 rounded\"\n        type=\"button\"\n      >\n        Search\n      </button>\n    </span>\n  );\n}\n","import React from \"react\";\n\nexport default function ({ websites }) {\n  return (\n    <div className=\"inline-block min-w-full max-w-md rounded overflow-hidden shadow-lg \">\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-xl mb-2 text-center\">Similar Sites</div>\n      </div>\n      <div className=\"text-center px-6 py-4\">\n        {websites.map((website, i) => (\n          <h3 key={i} className=\"underline text-blue-600 leading-tight\">\n            <a href={website}>{website}</a>\n          </h3>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport KeyWordsCard from \"./KeyWordsCard\";\nimport InputUrl from \"./InputUrl\";\nimport SimSitesCard from \"./SimSitesCard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keywords: [],\n      websites: [],\n      searched: false,\n      searching: false,\n      url: \"\",\n    };\n  }\n\n  fetchUrlDetails = () => {\n    let { url } = this.state;\n    console.log(url);\n    if (url === \"\") return;\n    this.setState({ searching: true, searched: true });\n    //store keywords,websites\n    fetch(\"http://websitecat-275808.appspot.com/\" + url)\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          keywords: data.keywords || [],\n          websites: data.websites || [],\n          searching: false,\n        })\n      );\n    //change state and\n  };\n\n  handleClick = () => {\n    this.fetchUrlDetails();\n  };\n\n  handleChange = (event) => {\n    this.setState({ url: event.target.value });\n  };\n\n  render() {\n    let { searched, searching, keywords, websites, url } = this.state;\n    let prompt = \"\";\n    if (searching === true) prompt = \"Looking for result\";\n    else if (searched === false) prompt = \"Type a url to get info\";\n    else if (keywords.length === 0 && websites.length === 0)\n      prompt = \"something went wrong try another url\";\n    else prompt = url;\n\n    return (\n      <div>\n        <InputUrl\n          handleClick={this.handleClick}\n          handleChange={this.handleChange}\n        />\n        <DisplayWebsiteInfo prompt={prompt} />\n        <div style={{ display: \"grid\", alignItems: \"center\" }}>\n          {keywords.length !== 0 && <KeyWordsCard keywords={keywords} />}\n          {websites.length !== 0 && <SimSitesCard websites={websites} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction DisplayWebsiteInfo({ prompt }) {\n  return (\n    <div className=\" text-center max-w-md mx-auto flex p-6 bg-gray-100 mt-10 rounded-lg mb-8 shadow-xl\">\n      <div className=\"flex justify-center text-center ml-6 pt-1\">\n        <h1 className=\"text-center text-2xl text-blue-700 leading-tight\">\n          {prompt}\n        </h1>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport Dash from \"./components/dash/index\";\nimport Predict from \"./components/websites/index\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keywords: [],\n      websites: [],\n      searched: false,\n      searching: false,\n      url: \"\",\n    };\n  }\n\n  fetchUrlDetails = () => {\n    let { url } = this.state;\n    if (url === \"\") return;\n    this.setState({ searching: true, searched: true });\n    //store keywords,websites\n    fetch(\"http://127.0.0.1:5000/\" + url)\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          keywords: data.keywords || [],\n          websites: data.websites || [],\n          searching: false,\n        })\n      );\n    //change state and\n  };\n\n  handleClick = () => {\n    this.fetchUrlDetails();\n  };\n\n  handleChange = (event) => {\n    this.setState({ url: event.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route path=\"/dash\">\n              <Dash />\n            </Route>\n            <Route path=\"/websites\">\n              <Predict />\n            </Route>\n            <Route path=\"/\">\n              <Dash />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./tailwind.generated.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}